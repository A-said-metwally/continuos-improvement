import React, {useEffect, useState} from 'react'
import Loading from '../components/Loading'
import {doc ,getDocs,  collection , onSnapshot , deleteDoc} from 'firebase/firestore'
import {db} from '../firebase'
import { users } from '../data'
import {useRouter} from 'next/router'
import Head from 'next/head'
import {UserIcon , LockClosedIcon} from '@heroicons/react/outline'



export default function Login() {
  const [UserCode , setUserCode] = useState("")
  const [UserPass , setUserPass] = useState('')
  const [DataValidation, setDataValidation] = useState(true)
  const [loading , setLoading] = useState(false)


  const router = useRouter()

  function viewErrorMsg(){
    setDataValidation(false)
    setTimeout(()=>{setDataValidation(true)},2000)
  }

  const login = async (e)=>{
    e.preventDefault()
      if (!UserCode || !UserPass){
      viewErrorMsg()
      return
     }

     setLoading(true)
    const usersRef = collection(db , 'users')
    await getDocs(usersRef)
    .then(response=>{     
      let usersData = response.docs.map(doc=>(
        {
          id:doc.id,
          data:doc.data()
      }
      ))
      return usersData
    })
    .then((usersInfo)=>{
      // if(usersInfo.length === 0) return alert ("Loading Bad")
      let CurrentUser = usersInfo.find((user)=>user.data.Code === UserCode)
      return CurrentUser
    })
    .then((CurrentUser)=>{
      const id = CurrentUser.id
      const {Code, Name, Pass, Pages, Image} = {...CurrentUser.data}
      if(UserPass === Pass){
      let userinfo = {id, Code, Name, Image, Pages }
      sessionStorage.setItem('userinfo' , JSON.stringify(userinfo))
      router.push(`/main`)

        }else{
        setLoading(false)
        setUserCode("")
        setUserPass("")
        viewErrorMsg()
        }
    })
    .catch(error => console.log(error.message))    
  }

    return (
      <div className=' h-screen flex
        bg-gradient-to-bl from-gray-100 via-blue-100 to-white
        justify-center items-start text-gray-500'>
      <Head>
        <title>Login Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <h3>{LoginStatus?"logedin": "not logged"}</h3> */}
      
      {loading && <Loading/>}
      
      {!loading && 
      <div className='w-96 md:max-w-md mt-20 rounded-2xl
      bg-gradient-to-tr from-purple-400 via-blue-200 to-white p-5 
      border border-emerald-700 shadow-2xl flex flex-col items-center'>
      <h1 className=' text-gray-500 text-2xl'>تسجيل الدخول</h1>
      
      <form method='post' className=' mt-4 flex flex-col items-end w-full'>
        <label htmlFor='user' className='  font-bold'>كود الموظف</label>
        <div className=' flex w-full  space-x-2 flex-row-reverse
        items-center border-b-2 border-gray-400 '>
        <UserIcon className='h-7 text-orange-600'/>
        <input 
          type="text"
          required
          id="user" 
          placeholder="ادحل الكود"
          className='p-3 
            w-full mt-2 text-right 
            bg-inherit  
            focus:outline-none text-lg'
            value={UserCode}
            onChange={(e)=>setUserCode(e.target.value)}
          />
        </div>
        <hr/>
        <label htmlFor='pass' className='  font-bold'>الرقم السرى</label>
        <div className=' flex w-full space-x-2 flex-row-reverse
        items-center border-b-2 border-gray-400 '>
        <LockClosedIcon className='h-7 text-orange-600'/>
        <input 
          type="password"
          required
          id="pass" 
          placeholder="ادحل الرقم السرى"
          className='p-2 
            w-full mt-2 text-right  
            bg-inherit  
            focus:outline-none text-lg'
            value={UserPass}
            onChange={(e)=>setUserPass(e.target.value)}

          />
        </div>
        {!DataValidation && <p className=' text-red-600 font-semibold transition-colors duration-100 '>بيانات المستخدم غير صحيحة</p>}
          <button
          onClick={login}
          className=" w-full mt-8 bg-gradient-to-tr
            from-blue-800 via-blue-200 to-orange-400
            p-2 rounded-full 
          items-center text-orange-800 
          font-bold shadow-xl mb-11 hover:scale-105 transition-all hover:border-blue-500 hover:border"
          >
          تسجيل الدخول
          </button>
      </form>
    </div>
    }
    </div>
)
}


